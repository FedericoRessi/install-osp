---
- hosts: undercloud
  become: true
  become_user: stack

  vars:
    home: /home/stack
    env_file: '{{ home }}/instackenv.json'
    nodes:
      - name: ctrl01
        vbmc_port: 6230
        profile: control

      - name: ctrl02
        vbmc_port: 6231
        profile: control

      - name: ctrl03
        vbmc_port: 6232
        profile: control

      - name: compute01
        vbmc_port: 6233
        profile: compute

      - name: compute02
        vbmc_port: 6234
        profile: compute

      - name: ceph01
        vbmc_port: 6235
        profile: ceph-storage

      - name: ceph02
        vbmc_port: 6236
        profile: ceph-storage

      - name: ceph03
        vbmc_port: 6237
        profile: ceph-storage

      - name: networker
        vbmc_port: 6238
        profile: networker

  tasks:

    - name: Check registered baremetal nodes
      shell: |
        source '{{ home }}/stackrc'
        openstack baremetal node list -f yaml
      changed_when: false
      register: registered_nodes_yaml

    - name: Select overcloud baremetal nodes
      set_fact:
        registered_nodes: >
          {{
            registered_nodes_yaml.stdout|
            from_yaml|
            selectattr('Name', 'search', '^overcloud-')|
            list
          }}

    - when:
        (registered_nodes | length) != (nodes | length)

      block:

        - name: Unregister overcloud nodes
          shell: |
            source '{{ home }}/stackrc'
            openstack baremetal node delete '{{ item.Name }}'
          ignore_errors: true
          with_items: '{{ registered_nodes }}'

        - name: Get MAC addresses
          shell: >
            virsh -c qemu+ssh://hypervisor/system domiflist "overcloud-{{ item.name }}" |
            awk '
              $3 == "provisioning" {
                print $5
              }
            '
          register: get_mac_addresses
          with_items: '{{ nodes }}'

        - name: Populate MAC addresses
          set_fact:
            mac_addresses: >
              {{
                mac_addresses|
                default({})|
                combine({item.item.name: item.stdout})
              }}
          with_items: "{{ get_mac_addresses.results }}"

        - name: Generate environment data
          set_fact:
            environment_yml: |
              ---
              nodes:
              {% for node in nodes %}

                - name: "overcloud-{{ node.name }}"
                  capabilities: "profile:{{ node.profile }}"
                  pm_addr: hypervisor
                  pm_password: redhat
                  pm_port: "{{ node.vbmc_port }}"
                  pm_type: pxe_ipmitool
                  pm_user: admin
                  mac:
                    - "{{ mac_addresses[node.name] }}"
              {% endfor %}

        - name: Write environment file
          copy:
            content: |
              {{
                environment_yml|
                from_yaml|
                to_json
              }}
            dest: '{{ env_file }}.raw'

        - name: Indent environment file
          shell: >
            python -m json.tool '{{ env_file }}.raw' > '{{ env_file }}'

        - name: Register baremetal nodes
          shell: |
            source '{{ home }}/stackrc'
            openstack baremetal import --json '{{ env_file }}'

        - name: Check registered baremetal nodes
          shell: |
            source '{{ home }}/stackrc'
            openstack baremetal node list -f yaml
          changed_when: false
          register: registered_nodes_yaml

        - name: Select overcloud baremetal nodes
          set_fact:
            registered_nodes: >
              {{
                registered_nodes_yaml.stdout|
                from_yaml|
                selectattr('Name', 'search', '^overcloud-')|
                list
              }}
          failed_when: (registered_nodes|length) != (nodes|length)

    - name: Place registered nodes into the manageable state
      when: >
        (item['Provisioning State'] != 'manageable') and
        (item['Provisioning State'] != 'active')
      shell: |
        source '{{ home }}/stackrc'
        openstack baremetal node manage '{{ item.Name }}'
      with_items: '{{ registered_nodes }}'

    - name: Check introspection nodes status
      shell: |
        source '{{ home }}/stackrc'
        openstack baremetal introspection bulk status -f yaml
      register: introspection_nodes_yaml
      changed_when: false

    - name: Parse inspected nodes status
      set_fact:
        instrospection_nodes: >
          {{ introspection_nodes_yaml.stdout|from_yaml }}

    - name: Abort unfinished introspections
      when: not item.Finished
      shell: |
        source '{{ home }}/stackrc'
        openstack baremetal introspection abort '{{ item["Node UUID"] }}' > /dev/null
      with_items: >
        {{ instrospection_nodes|json_query('[?!Finished]') }}
      register: abort_introspection

    - when: abort_introspection|changed
      block:

      - name: Check introspection nodes status
        shell: |
          source '{{ home }}/stackrc'
          openstack baremetal introspection bulk status -f yaml
        register: introspection_nodes_yaml
        changed_when: false

      - name: Parse inspected nodes status
        set_fact:
          instrospection_nodes: >
            {{ introspection_nodes_yaml.stdout|from_yaml }}

      - name: Check introspection abortion failed
        fail:
          msg: Unable to abort node introspection
        with_items: >
          {{ instrospection_nodes|json_query('[?!Finished]') }}

    - when: >
        ((instrospection_nodes|json_query('[?Error]')|length) > 0) or
        ((instrospection_nodes|length) != (nodes|length))
      block:

      - name: Introspect nodes
        when: >
          item.UUID not in (
            instrospection_nodes|
            json_query('[?!Error]')|
            map(attribute='Node UUID')|
            list
          )

        shell: |
          source '{{ home }}/stackrc'
          openstack overcloud node introspect '{{ item.UUID }}'

        with_items: '{{ registered_nodes }}'

      - name: Check introspection nodes status
        shell: |
          source '{{ home }}/stackrc'
          openstack baremetal introspection bulk status -f yaml
        register: introspection_nodes_yaml
        changed_when: false

      - name: Parse inspected nodes status
        set_fact:
          instrospection_nodes: >
            {{ introspection_nodes_yaml.stdout|from_yaml }}

      - fail:
          msg: Errors inspecting node
        with_items: >
          {{ instrospection_nodes|json_query('[?Error]') }}
