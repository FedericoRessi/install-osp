---
- hosts: hypervisor
  become: true

  vars:
    user: root
    home: /root
    target_host_dir: "{{ lookup('env', 'TARGET_HOST_DIR') }}"

  tasks:

    - name: Authorize SSH publick key
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', '.install-osp/id_rsa.pub') }}"

    - name: Get ipervisor packages access RPM
      get_url:
        url: "http://rhos-release.virt.bos.redhat.com/repos/rhos-release/rhos-release-latest.noarch.rpm"
        dest: /tmp/rhos-release-latest.noarch.rpm

    - name: Enable ipervisor packages access
      yum:
        name: /tmp/rhos-release-latest.noarch.rpm
        state: present

    - name: Enable the latest OSP director and RHEL packages
      shell: >
        rhos-release 11-director
      changed_when: false

    - name: Upgrade all packages
      yum:
        name: "*"
        state: latest

    - name: Copy /etc/hosts file
      copy:
        src: hypervisor/etc/hosts
        dest: /etc/hosts

    - name: Enable nested KVM
      copy:
        src: hypervisor/etc/modprobe.d/kvm_intel.conf
        dest: /etc/modprobe.d/kvm_intel.conf

    - name: Disable the rp_filter to allow VMs to communicate with the underlying host
      copy:
        src: hypervisor/etc/sysctl.d/98-rp-filter.conf
        dest: /etc/sysctl.d/98-rp-filter.conf

    - name: Get last kernel
      shell: |
        rpm -q --last kernel |
        awk '
          {
            sub(/kernel-/,"")
            print $1
            exit 0
          }'
      changed_when: false
      register: last_kernel

    - name: Check current kernel
      command: >
        uname -r
      register: current_kernel
      changed_when: false

    - when: last_kernel.stdout != current_kernel.stdout
      block:

        - name: Reboot {{ inventory_hostname }} node
          shell: >
            sleep 2 && reboot "Reboot required to update kernel."
          ignore_errors: true
          async: 1
          poll: 0

        - name: Wait for system to become reachable
          wait_for_connection:
            delay: 5
            timeout: 300

        - name: Check current kernel
          command: >
            uname -r
          register: current_kernel
          changed_when: false
          failed_when: last_kernel.stdout != current_kernel.stdout

    - name: Install Squid proxy
      yum:
        name: squid
        state: installed

    - name: Make sure Squid is enabled and running
      systemd:
        name: squid
        enabled: yes
        state: started

    - name: Setup firewall rules for Squid
      firewalld:
        permanent: true
        immediate: true
        service: squid
        zone: public
        state: disabled

    - name: Check virtualization acceleration
      shell: >
        egrep -c '(vmx|svm)' /proc/cpuinfo
      register: has_virtualization_acceleration
      changed_when: false

    - name: Warn if acceleration is not available
      when: has_virtualization_acceleration.stdout|int < 1
      debug:
        msg: "WARNING: host {{ inventory_hostname }} CPU has no virtualization acceleration."

    - name: Check the KVM kernel modules are loaded
      command: >
        modprobe {{ item }}
      with_items:
        - kvm
        - kvm_intel
      changed_when: false

    - name: Install and configure ipervisor
      yum:
        state: installed
        name:
          - libvirt
          - qemu-kvm
          - virt-manager
          - virt-install
          - libguestfs-tools
          - libguestfs-xfs
          - net-tools

    - name: Enable and start libvirt server
      systemd:
        name: libvirtd
        enabled: yes
        state: started

    - name: Check if DHCP is disabled on default network
      shell: >
        virsh net-dumpxml default |
        grep -v "<range start='192.168.122.2' end='192.168.122.254'/>"
      changed_when: false
      ignore_errors: true
      register: is_dhcp_disenabled_on_default_network

    - name: Disable DHCP on default network
      when: is_dhcp_disenabled_on_default_network|failed
      command: >
        virsh net-update default delete ip-dhcp-range
          "<range start='192.168.122.2' end='192.168.122.254'/>" --live --config

    - name: Check provisioning network has been configured
      shell: >
        virsh net-list --persistent |
          awk '
            ($1=="provisioning" && $2=="active" && $3=="yes" && $4 == "yes") {
              success=1
            }
            END{
              if(success != 1) exit(1)
            }
          '
      ignore_errors: true
      register: has_provisioning_network
      changed_when: false

    - name: Configure provisioning network
      when: has_provisioning_network|failed
      block:

        - name: Upload ipervisor provisioning network conf file
          copy:
            src: hypervisor/tmp/provisioning-network.xml
            dest: /tmp/provisioning-network.xml

        - name: Define ipervisor provisioning network
          command: virsh {{ item }}
          with_items:
            - net-define /tmp/provisioning-network.xml
            - net-autostart provisioning
            - net-start provisioning

    - name: Check there is a big enought cloud image
      shell: >
        qemu-img info /var/lib/libvirt/images/rhel7-guest.qcow2 |
          grep -e '^virtual size: 40G'
      ignore_errors: true
      register: has_cloud_image
      changed_when: false

    - when: has_cloud_image|failed
      block:

        - name: Create a new image
          command: >
            qemu-img create -f qcow2 /tmp/rhel7-guest.qcow2 40G

        - name: Download RHEL 7.4 cloud image
          get_url:
            url: "http://10.12.50.1/pub/rhel-server-7.4-x86_64-kvm.qcow2"
            dest: /tmp/rhel7-guest-official.qcow2

        - name: Expand original image to the new one with a bigger size
          command: >
            virt-resize --expand /dev/sda1 \
                /tmp/rhel7-guest-official.qcow2 \
                /tmp/rhel7-guest.qcow2

        - name: Install newly generated image
          command: >
            mv /tmp/rhel7-guest.qcow2 /var/lib/libvirt/images/rhel7-guest.qcow2
