---
- hosts: overcloud
  become: true
  become_user: heat-admin

  vars:
    home: /home/heat-admin

  tasks:

    - name: Get overcloud compute services
      shell: |
        source ~/overcloudrc
        openstack compute service list -f yaml
      register: openstack_compute_services_yaml
      changed_when: false

    - name: Parse overcloud compute services
      set_fact:
        openstack_compute_services: >
          {{ openstack_compute_services_yaml.stdout|from_yaml }}

    - name: Check
      fail:
        msg: Compute service not found.
      when: >
        (
          openstack_compute_services|
          selectattr('Binary', 'equalto', item)|
          list|
          length
        ) == 0
      with_items:
        - 'nova-consoleauth'
        - 'nova-scheduler'
        - 'nova-conductor'
        - 'nova-compute'

    - name: Get overcloud networks
      shell: |
        source ~/overcloudrc
        openstack network list -f yaml
      register: overcloud_networks_yaml
      changed_when: false

    - name: Parse overcloud networks
      set_fact:
        overcloud_networks: >
          {{ overcloud_networks_yaml.stdout|from_yaml }}

    - name: Create overcloud management network
      when: >
        (
          overcloud_networks|
          selectattr('Name', 'equalto', 'management')|
          list|
          length
        ) == 0
      block:

        - name: Create management network
          shell: |
            source ~/overcloudrc
            openstack network create management --external

        - name: Get overcloud networks
          shell: |
            source ~/overcloudrc
            openstack network list -f yaml
          register: overcloud_networks_yaml
          changed_when: false

        - name: Parse overcloud networks
          set_fact:
            overcloud_networks: >
              {{ overcloud_networks_yaml.stdout|from_yaml }}

    - name: Select management network
      set_fact:
        management_network: >
          {{
            overcloud_networks|
            selectattr('Name', 'equalto', 'management')|
            first
          }}

    - debug:
        var: management_network
        verbosity: 2

    - name: Get overcloud subnets
      shell: |
        source ~/overcloudrc
        openstack subnet list -f yaml
      register: overcloud_subnets_yaml
      changed_when: false

    - name: Parse management subnets
      set_fact:
        overcloud_subnets: >
          {{ overcloud_subnets_yaml.stdout|from_yaml }}

    - when: >
        (
          overcloud_subnets|
          selectattr('Name', 'equalto', 'management_subnet')|
          selectattr('Network', 'equalto', management_network.ID)|
          list|
          length
        ) == 0
      block:

        - name: Create management subnet
          shell: |
            source ~/overcloudrc
            openstack subnet create \
              --network '{{ management_network.ID }}' --no-dhcp \
              --dns-nameserver 192.168.122.1 \
              --allocation-pool start=172.16.0.210,end=172.16.0.230 \
              --subnet-range 172.16.0.0/24 \
              management_subnet

        - name: Get overcloud subnets
          shell: |
            source ~/overcloudrc
            openstack subnet list -f yaml
          register: overcloud_subnets_yaml
          changed_when: false

        - name: Parse management subnets
          set_fact:
            overcloud_subnets: >
              {{ overcloud_subnets_yaml.stdout|from_yaml }}

    - name: Select management subnet
      set_fact:
        management_subnet: >
          {{
            overcloud_subnets|
            selectattr('Name', 'equalto', 'management_subnet')|
            selectattr('Network', 'equalto', management_network.ID)|
            first
          }}

    - debug:
        var: management_subnet
        verbosity: 2

    - name: Create overcloud internal network
      when: >
        (
          overcloud_networks|
          selectattr('Name', 'equalto', 'internal')|
          list|
          length
        ) == 0
      block:

        - name: Create internal network
          shell: |
            source ~/overcloudrc
            openstack network create internal

        - name: Get overcloud networks
          shell: |
            source ~/overcloudrc
            openstack network list -f yaml
          register: overcloud_networks_yaml
          changed_when: false

        - name: Parse overcloud networks
          set_fact:
            overcloud_networks: >
              {{ overcloud_networks_yaml.stdout|from_yaml }}

    - name: Select internal network
      set_fact:
        internal_network: >
          {{
            overcloud_networks|
            selectattr('Name', 'equalto', 'internal')|
            first
          }}

    - debug:
        var: internal_network
        verbosity: 2

    - when: >
        (
          overcloud_subnets|
          selectattr('Name', 'equalto', 'internal_subnet')|
          selectattr('Network', 'equalto', internal_network.ID)|
          list|
          length
        ) == 0
      block:

        - name: Create internal subnet
          shell: |
            source ~/overcloudrc
            openstack subnet create \
              --network '{{ internal_network.ID }}' \
              --subnet-range 192.168.0.0/24 \
              internal_subnet

        - name: Get overcloud subnets
          shell: |
            source ~/overcloudrc
            openstack subnet list -f yaml
          register: overcloud_subnets_yaml
          changed_when: false

        - name: Parse management subnets
          set_fact:
            overcloud_subnets: >
              {{ overcloud_subnets_yaml.stdout|from_yaml }}

    - name: Select internal subnet
      set_fact:
        internal_subnet: >
          {{
            overcloud_subnets|
            selectattr('Name', 'equalto', 'internal_subnet')|
            selectattr('Network', 'equalto', internal_network.ID)|
            first
          }}

    - debug:
        var: internal_subnet
        verbosity: 2

    - name: Get overcloud routers
      shell: |
        source ~/overcloudrc
        openstack router list --long -f yaml
      register: overcloud_routers_yaml
      changed_when: false

    - name: Parse overcloud routers
      set_fact:
        overcloud_routers: >
          {{ overcloud_routers_yaml.stdout|from_yaml }}

    - when: >
        (
          overcloud_routers|
          selectattr('Name', 'equalto', 'internal_router')|
          list|
          length
        ) == 0
      block:

        - name: Create internal router
          shell: |
            source ~/overcloudrc
            openstack router create internal_router

        - name: Get overcloud routers
          shell: |
            source ~/overcloudrc
            openstack router list --long -f yaml
          register: overcloud_routers_yaml
          changed_when: false

        - name: Parse overcloud routers
          set_fact:
            overcloud_routers: >
              {{ overcloud_routers_yaml.stdout|from_yaml }}

    - name: Select internal router
      set_fact:
        internal_router: >
          {{
            overcloud_routers|
            selectattr('Name', 'equalto', 'internal_router')|
            first
          }}

    - debug:
        var: internal_router
        # verbosity: 2

    - name: Parse internal router external gateway info
      set_fact:
        internal_router_gateway: >
          {{
            internal_router['External gateway info']|
            from_yaml
          }}

    - when: >
        (internal_router_gateway is not mapping) or
        (internal_router_gateway.network_id != management_network.ID)
      block:

        - name: Setup external gateway for internal router
          shell: |
            source ~/overcloudrc
            neutron router-gateway-set internal_router management

        - name: Get overcloud routers
          shell: |
            source ~/overcloudrc
            openstack router list --long -f yaml
          register: overcloud_routers_yaml
          changed_when: false

        - name: Parse overcloud routers
          set_fact:
            overcloud_routers: >
              {{ overcloud_routers_yaml.stdout|from_yaml }}

        - name: Select internal router
          set_fact:
            internal_router: >
              {{
                overcloud_routers|
                selectattr('Name', 'equalto', 'internal_router')|
                first
              }}

        - name: Parse internal router external gateway info
          set_fact:
            internal_router_gateway: >
              {{
                internal_router['External gateway info']|
                from_yaml
              }}
          failed_when: >
            internal_router_gateway.network_id != management_network.ID

    - debug:
        var: internal_router_gateway
        # verbosity: 2
