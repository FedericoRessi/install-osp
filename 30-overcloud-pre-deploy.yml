---
- hosts: undercloud
  become: true
  become_user: stack

  vars:
    home: /home/stack
    subnet_name: ctlplane-subnet
    dns_nameservers: 192.168.122.1

  tasks:

    - name: Get subnet details
      shell: |
        source '{{ home }}/stackrc'
        openstack subnet show ctlplane-subnet -f yaml
      register: subnet_yaml
      changed_when: false

    - name: Parse subnet details
      set_fact:
        subnet: '{{ subnet_yaml.stdout|from_yaml }}'

    - when: subnet.dns_nameservers != dns_nameservers
      block:

        - name: Set subnet nameserver
          shell: |
            source '{{ home }}/stackrc'
            openstack subnet set \
              --no-dns-nameserver \
              --dns-nameserver '{{ dns_nameservers }}' '{{ subnet.id }}'
          register: set_subnet_server

        - name: Check subnet nameservers has changed
          shell: |
            source '{{ home }}/stackrc'
            openstack subnet show '{{ subnet.id }}' -f yaml
          register: subnet_yaml
          changed_when: false
          failed_when: (subnet_yaml.stdout|from_yaml).dns_nameservers != dns_nameservers

    - name: Get image list
      shell: |
        source '{{ home }}/stackrc'
        openstack image list -f yaml
      changed_when: false
      register: images_yaml

    - name: Parse image list
      set_fact:
        images: '{{ images_yaml.stdout|from_yaml }}'

    - name: Select image ids
      set_fact:
        '{{ item.var }}': >
          {{
            images|
            selectattr('Name', 'equalto', item.name)|
            first
          }}
      with_items:
        - var: deploy_kernel_image
          name: bm-deploy-kernel
        - var: deploy_ramdisk_image
          name: bm-deploy-ramdisk

    - name: Get registered baremetal nodes
      shell: |
        source '{{ home }}/stackrc'
        openstack baremetal node list -f yaml
      changed_when: false
      register: registered_nodes_yaml

    - name: Select overcloud baremetal nodes
      set_fact:
        registered_nodes: >
          {{
            registered_nodes_yaml.stdout|
            from_yaml|
            selectattr('Name', 'search', '^overcloud-')|
            list
          }}

    - name: Get baremetal nodes details
      shell: |
        source '{{ home }}/stackrc'
        openstack baremetal node show -f yaml '{{ item.UUID }}'
      register: nodes_yaml
      changed_when: false
      with_items: '{{ registered_nodes }}'

    - name: Parse baremetal nodes details
      set_fact:
        nodes: >
         {{
            nodes_yaml.results|
            map(attribute='stdout')|
            map('from_yaml')|
            list
         }}

    - name: Get non-bootable baremetal node IDs
      set_fact:
        non_bootable_nodes_yaml: >
          [
            {% for node in nodes %}
              {% if (node.driver_info.deploy_kernel != deploy_kernel_image.ID) or
                    (node.driver_info.deploy_ramdisk != deploy_ramdisk_image.ID) %}
              {{ node.uuid }},
              {% endif %}
            {% endfor %}
          ]

    - name: Parse non-bootable baremetal node IDs
      set_fact:
        non_bootable_nodes: '{{ non_bootable_nodes_yaml|from_yaml }}'

    - name: Configure overcloud node images
      when: (non_bootable_nodes|length) > 0
      shell: |
        source '{{ home }}/stackrc'
        openstack overcloud node configure \
          --deploy-kernel bm-deploy-kernel \
          --deploy-ramdisk bm-deploy-ramdisk \
        {% for uuid in non_bootable_nodes %}
          '{{ uuid }}' \
        {% endfor %}
      register: configure_overcloud_nodes

    - when: configure_overcloud_nodes|changed
      block:

        - name: Get registered baremetal nodes
          shell: |
            source '{{ home }}/stackrc'
            openstack baremetal node list -f yaml
          changed_when: false
          register: registered_nodes_yaml

        - name: Select overcloud baremetal nodes
          set_fact:
            registered_nodes: >
              {{
                registered_nodes_yaml.stdout|
                from_yaml|
                selectattr('Name', 'search', '^overcloud-')|
                list
              }}

    - name: Select unavailable nodes
      set_fact:
        unavailable_nodes: >
          {{
            registered_nodes|
            selectattr('Provisioning State', 'equalto', 'available')|
            list|
            symmetric_difference(registered_nodes)
          }}

    - name: Provide overcloud nodes
      shell: |
        source '{{ home }}/stackrc'
        openstack baremetal node provide '{{ item.UUID }}'
      register: provide_overcloud_nodes
      with_items: >
        {{ unavailable_nodes }}

    - when: provide_overcloud_nodes|changed
      block:

        - name: Get registered baremetal nodes
          shell: |
            source '{{ home }}/stackrc'
            openstack baremetal node list -f yaml
          changed_when: false
          register: registered_nodes_yaml

        - name: Select overcloud baremetal nodes
          set_fact:
            registered_nodes: >
              {{
                registered_nodes_yaml.stdout|
                from_yaml|
                selectattr('Name', 'search', '^overcloud-')|
                list
              }}

        - name: Select unavailable nodes
          set_fact:
            unavailable_nodes: >
              {{
                registered_nodes|
                selectattr('Provisioning State', 'equalto', 'available')|
                list|
                symmetric_difference(registered_nodes)
              }}
            failed_when:
              (unavailable_nodes|length) > 0

    - name: Get overcloud profiles
      shell: |
        source '{{ home }}/stackrc'
        openstack overcloud profiles list -f yaml
      changed_when: false
      register: overcloud_profiles_yaml

    - name: Parse overcloud profiles
      set_fact:
        overcloud_profiles: >
          {{ overcloud_profiles_yaml.stdout|from_yaml }}

    - name: Select invalid node profiles
      set_fact:
        invalid_profiles: >
          {{
            invalid_profiles|
            default([])|
            union(
              overcloud_profiles|
              selectattr('Current Profile', 'equalto', item.profile)|
              list|
              symmetric_difference(overcloud_profiles)|
              selectattr('Node Name', 'search', item.regex)|
              map('combine', {'Expected Profile': item.profile})|
              list
            )
          }}
      with_items:
        - profile: control
          regex: '^overcloud-ctrl'
        - profile: compute
          regex: '^overcloud-compute'
        - profile: ceph-storage
          regex: '^overcloud-ceph'
        - profile: networker
          regex: '^overcloud-networker'

    - debug:
        var: invalid_profiles
        verbosity: 2

    - name: Assign profile to nodes
      shell: |
        source '{{ home }}/stackrc'
        ironic node-update \
          '{{ item["Node UUID"] }}' \
          add properties/capabilities='profile:{{ item['Expected Profile'] }},boot_option:local'
      register: assign_profiles
      with_items: >
        {{ invalid_profiles }}

    - when: assign_profiles|changed
      block:
        - name: Get overcloud profiles
          shell: |
            source '{{ home }}/stackrc'
            openstack overcloud profiles list -f yaml
          changed_when: false
          register: overcloud_profiles_yaml

        - name: Parse overcloud profiles
          set_fact:
            overcloud_profiles: >
              {{ overcloud_profiles_yaml.stdout|from_yaml }}

        - name: Check node profiles
          when: >
            (
              overcloud_profiles|
              selectattr('Node UUID', 'search', item['Node UUID'])|
              selectattr('Current Profile', 'equalto', item['Expected Profile'])|
              list|
              length
            ) == 0
          fail: >
            Invalid node profile for node: {{ item['Node Name'] }}
          with_items: >
            {{ invalid_profiles }}
