---
- hosts: target
  become: true

  vars:
    user: stack
    home: "/home/{{ user }}"

  tasks:

    - name: Get ipervisor packages access RPM
      get_url:
        url: "http://rhos-release.virt.bos.redhat.com/repos/rhos-release/rhos-release-latest.noarch.rpm"
        dest: /tmp/rhos-release-latest.noarch.rpm

    - name: Enable ipervisor packages access
      yum:
        name: /tmp/rhos-release-latest.noarch.rpm
        state: present

    - name: Enable the latest OSP director and RHEL packages
      shell: >
        rhos-release 11-director

    - name: Upgrade all packages
      yum:
        name: "*"
        state: latest

    - name: Enable nested KVM
      template:
        src: etc/modprobe.d/kvm_intel.conf
        dest: /etc/modprobe.d/kvm_intel.conf

    - name: Disable the rp_filter to allow VMs to communicate with the underlying host
      template:
        src: etc/sysctl.d/98-rp-filter.conf
        dest: /etc/sysctl.d/98-rp-filter.conf

    - name: Check for reboot hint
      shell: |
        LAST_KERNEL=$(rpm -q --last kernel | awk 'NR==1{sub(/kernel-/,""); print $1}')
        CURRENT_KERNEL=$(uname -r); if [ $LAST_KERNEL != $CURRENT_KERNEL ]; then
          echo 'reboot'
        else
          echo 'no'
        fi
      ignore_errors: true
      register: reboot_hint

    - name: Reboot {{ inventory_hostname }} node
      shell: >
        sleep 2 &&
        shutdown -r +1 "Reboot required to update kernel."
      async: 1
      poll: 0
      ignore_errors: true
      when: reboot_hint.stdout.find("reboot") != -1

    - name: Waiting for {{ inventory_hostname }} node to come back...
      local_action: wait_for host={{ inventory_hostname }} state=started delay=10 timeout=300
      become: false
      when: reboot_hint.stdout.find("reboot") != -1
