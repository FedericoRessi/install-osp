#!/bin/bash

set -eu

source "$(dirname $0)/bin/activate"

export HYPERVISOR_DIR=${HYPERVISOR_DIR:-$(pwd)/.install-osp}
mkdir -p "${HYPERVISOR_DIR}" "${INSTALL_OSP_SSH_DIR}"


# Get playbooks dir
PLAYBOOK_DIR=${PLAYBOOK_DIR:-${INSTALL_OSP_DIR}}

declare -a PLAYBOOK_FILES

while (( $# > 0 )); do
    arg="$1"
    shift

    case ${arg} in

        -h|--hypervisor)
        HYPERVISOR="$1"
        shift
        ;;

        -p|--proxy)
        PROXY_JUMP="$1"
        shift
        ;;

        -*)
        echo "
            Invalid option: $arg
                $0 [-h <hypervisor-host>] [<play-book-names...>]
        "
        exit 1
        ;;

        *)
        if [ -f "${arg}" ]; then
            PLAYBOOK_FILES+=("${arg}")
        else
            playbook_files=($(
                find "${PLAYBOOK_DIR}" -maxdepth 1 -name "*-${arg}*.yml"
            ))

            if (( ${#playbook_files[@]} == 0 )); then
                echo "Invalid playbook name: ${arg}" >&2; exit 3
            fi

            PLAYBOOK_FILES+=("${playbook_files[@]}")
        fi
        ;;
    esac
done

HYPERVISOR_FILE=${HYPERVISOR_FILE:-${HYPERVISOR_DIR}/hypervisor}

# Get hypervisor host from file if not given
HYPERVISOR=${HYPERVISOR:-$(cat "${HYPERVISOR_FILE}" || true)}
if [ "${HYPERVISOR}" == "" ]; then
    echo "
        Please specify at least one hypervisor host name:
            $0 -h <hypervisor-host> [<play-book-names...>]
    "
    exit 2
fi

# Detect SSH key file and creates it if not found
export SSH_IDENTITY_FILE=${SSH_IDENTITY_FILE:-${INSTALL_OSP_SSH_DIR}/id_rsa}
if ! [ -r "${SSH_IDENTITY_FILE}" ]; then
    ssh-keygen -P "" -f "${SSH_IDENTITY_FILE}"
fi

PROXY_JUMP_FILE=${PROXY_JUMP_FILE:-${HYPERVISOR_DIR}/proxy}
PROXY_JUMP=${PROXY_JUMP:-$(cat "${PROXY_JUMP_FILE}" || true)}

if [ "${PROXY_JUMP}" != "" ]; then
    PROXY_JUMP_OPTION="ProxyJump ${PROXY_JUMP}"
fi

# Save options to file for later use
echo "${HYPERVISOR}" > "${HYPERVISOR_FILE}"
echo "${PROXY_JUMP}" > "${PROXY_JUMP_FILE}"


# Generate SSH config file
HYPERVISOR_PORT=${HYPERVISOR_PORT:-22}
export SSH_CONFIG_FILE=${SSH_CONFIG_FILE:-${INSTALL_OSP_SSH_DIR}/config}
echo "
Host hypervisor
    HostName ${HYPERVISOR}
    User root
    Port ${HYPERVISOR_PORT}
    UserKnownHostsFile /dev/null
    StrictHostKeyChecking no
    IdentityFile ${SSH_IDENTITY_FILE}
    ${PROXY_JUMP_OPTION:-}

Host undercloud
    HostName undercloud
    User root
    Port 22
    UserKnownHostsFile /dev/null
    StrictHostKeyChecking no
    IdentityFile ${SSH_IDENTITY_FILE}
    ProxyJump hypervisor

Host overcloud
    HostName overcloud-controller-0
    User heat-admin
    Port 22
    UserKnownHostsFile /dev/null
    StrictHostKeyChecking no
    IdentityFile ${SSH_IDENTITY_FILE}
    ProxyJump undercloud

" > "${SSH_CONFIG_FILE}"


# Generate ansible config file
ANSIBLE_CONFIG_FILE=${ANSIBLE_CONFIG_FILE:-${HYPERVISOR_DIR}/ansible.cfg}
echo "
[ssh_connection]
ssh_args = -F '${SSH_CONFIG_FILE}'
" > "${ANSIBLE_CONFIG_FILE}"


# Generate hosts.ini
ANSIBLE_INVENTORY_FILE=${ANSIBLE_INVENTORY_FILE:-${HYPERVISOR_DIR}/hosts.ini}
echo "
[metal]
hypervisor

[cloud]
undercloud

" > "${ANSIBLE_INVENTORY_FILE}"


# Get playbooks files
if (( ${#PLAYBOOK_FILES[@]} == 0 )); then
    PLAYBOOK_FILES=("main.yml")
else
    PLAYBOOK_FILES=($(IFS=$'\n'; sort <<< "${PLAYBOOK_FILES[*]}"))
fi

ssh-copy-id -i "${SSH_IDENTITY_FILE}" hypervisor

PLAYBOOK_OPTIONS=(
    "--ssh-common-args=-F '${SSH_CONFIG_FILE}'"
    -i "${ANSIBLE_INVENTORY_FILE}"
)

# Run ansible playbooks
for playbook_file in "${PLAYBOOK_FILES[@]}"; do
    echo "Execute playbook ${playbook_file}"
    ansible-playbook "${PLAYBOOK_OPTIONS[@]}" "${playbook_file}"
done
