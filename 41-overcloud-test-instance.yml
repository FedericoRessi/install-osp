---
- hosts: overcloud
  become: true
  become_user: heat-admin

  vars:
    home: /home/heat-admin
    identity_file: '{{ home }}/.ssh/id_rsa'
    security_group_rules:
      - protocol: tcp
        port_range: "22:22"
        dst_port: 22
      - protocol: icmp
        port_range: ""
        dst_port: -1

  tasks:

    - name: Get overcloud networks
      shell: |
        source ~/overcloudrc
        openstack network list -f yaml
      register: overcloud_networks_yaml
      changed_when: false

    - name: Parse overcloud falvors
      set_fact:
        overcloud_networks: >
          {{ overcloud_networks_yaml.stdout|from_yaml }}

    - name: List overcloud instances
      shell: |
        source ~/overcloudrc
        openstack server list -f yaml
      register: overcloud_instances_yaml
      changed_when: false

    - name: Parse overcloud instances
      set_fact:
        overcloud_instances: >
          {{ overcloud_instances_yaml.stdout|from_yaml }}

    - when: >
        (
          overcloud_instances|
          selectattr('Name', 'equalto', 'overcloud-test')|
          selectattr('Status', 'equalto', 'ACTIVE')|
          list|
          length
        ) == 0
      block:

        - name: List overcloud images
          shell: |
            source ~/overcloudrc
            openstack image list -f yaml
          register: overcloud_images_yaml
          changed_when: false

        - name: Parse overcloud images
          set_fact:
            overcloud_images: >
              {{ overcloud_images_yaml.stdout|from_yaml }}

        - when: >
            (
              overcloud_images|
              selectattr('Name', 'equalto', 'cirros')|
              list|
              length
            ) == 0
          block:

            - name: Download Cirros image
              get_url:
                url: http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img
                dest: /tmp

            - name: Upload the image to overcloud
              shell: |
                source ~/overcloudrc
                openstack image create cirros \
                  --file /tmp/cirros-0.3.5-x86_64-disk.img \
                  --disk-format qcow2 \
                  --container-format bare \
                  --public

            - name: List overcloud images
              shell: |
                source ~/overcloudrc
                openstack image list -f yaml
              register: overcloud_images_yaml
              changed_when: false

            - name: Parse overcloud images
              set_fact:
                overcloud_images: >
                  {{ overcloud_images_yaml.stdout|from_yaml}}

        - name: Select cirros image
          set_fact:
            cirros_image: >
              {{
                overcloud_images|
                selectattr('Name', 'equalto', 'cirros')|
                first
              }}

        - debug:
            var: cirros_image
            verbosity: 2

        - name: Get overcloud flavors
          shell: |
            source ~/overcloudrc
            openstack flavor list -f yaml
          register: overcloud_flavors_yaml
          changed_when: false

        - name: Parse overcloud falvors
          set_fact:
            overcloud_falvors: >
              {{ overcloud_flavors_yaml.stdout|from_yaml }}

        - when: >
            (
              overcloud_falvors|
              selectattr('Name', 'equalto', 'm1.tiny')|
              list|
              length
            ) == 0
          block:

            - name: Create flavor
              shell: |
                source ~/overcloudrc
                openstack flavor create --ram 512 --disk 2 --vcpus 1 --id auto m1.tiny

            - name: Get overcloud flavors
              shell: |
                source ~/overcloudrc
                openstack flavor list -f yaml
              register: overcloud_flavors_yaml
              changed_when: false

            - name: Parse overcloud falvors
              set_fact:
                overcloud_falvors: >
                  {{ overcloud_flavors_yaml.stdout|from_yaml }}

        - name: Select tiny flavor
          set_fact:
            tiny_flavor: >
              {{
                overcloud_falvors|
                selectattr('Name', 'equalto', 'm1.tiny')|
                first
              }}

        - debug:
            var: tiny_flavor
            verbosity: 2

        - name: Select internal network
          set_fact:
            internal_network: >
              {{
                overcloud_networks|
                selectattr('Name', 'equalto', 'internal')|
                first
              }}

        - debug:
            var: internal_network
            verbosity: 2

        - name: Delete existing test instances
          shell: |
            source ~/overcloudrc
            openstack server delete '{{ item.ID }}'

          with_items: >
            {{
              overcloud_instances|
              selectattr('Name', 'equalto', 'overcloud-test')|
              list
            }}

        - name: Create overcloud test instance
          shell: |
            source ~/overcloudrc
            openstack server create \
              --flavor '{{ tiny_flavor.ID }}' \
              --nic 'net-id={{ internal_network.ID }}' \
              --image '{{ cirros_image.ID }}' \
              overcloud-test

        - name: Wait for test instance to get active
          shell: |
            source ~/overcloudrc
            openstack server list -f yaml
          register: overcloud_instances_yaml
          until: >
            (
              overcloud_instances_yaml.stdout|
              from_yaml|
              selectattr('Name', 'equalto', 'overcloud-test')|
              selectattr('Status', 'equalto', 'ACTIVE')|
              list|
              length
            ) == 1
          retries: 20
          delay: 5
          changed_when: false

        - name: Parse overcloud instances
          set_fact:
            overcloud_instances: >
              {{ overcloud_instances_yaml.stdout|from_yaml }}

    - debug:
        var: overcloud_instances
        verbosity: 2

    - name: Select overcloud test instance
      set_fact:
        test_instance: >
          {{
            overcloud_instances|
            selectattr('Name', 'equalto', 'overcloud-test')|
            first
          }}

    - debug:
        var: test_instance
        verbosity: 2

    - name: Parse test instance ip addresses
      set_fact:
        test_instance_ips: >
          {{
            test_instance.Networks|
            regex_findall('\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b')|
            list
          }}

    - debug:
        var: test_instance_ips
        # verbosity: 2

    - name: Select management network
      set_fact:
        management_network: >
          {{
            overcloud_networks|
            selectattr('Name', 'equalto', 'management')|
            first
          }}

    - debug:
        var: management_network
        verbosity: 2

    - name: Get overcloud subnets
      shell: |
        source ~/overcloudrc
        openstack subnet list -f yaml
      register: overcloud_subnets_yaml
      changed_when: false

    - name: Parse overcloud subnets
      set_fact:
        overcloud_subnets: >
          {{overcloud_subnets_yaml.stdout|from_yaml}}

    - debug:
        var: overcloud_subnets
        verbosity: 2

    - name: Select management subnet
      set_fact:
        management_subnet: >
          {{
            overcloud_subnets|
            selectattr('Network', 'equalto', management_network.ID)|
            first
          }}

    - debug:
        var: management_subnet
        verbosity: 2

    - when: >
        (
          test_instance_ips|
          ipaddr(management_subnet.Subnet)|
          list|
          length
        ) ==0
      block:

        - name: Create management floating IP
          shell: |
            source ~/overcloudrc
            openstack floating ip create '{{ management_network.ID }}'

        - name: List floating IPs
          shell: |
            source ~/overcloudrc
            openstack floating ip list -f yaml
          register: overcloud_floating_ips_yaml
          changed_when: false

        - name: Parse overcloud floating IPs
          set_fact:
            overcloud_floating_ips: >
              {{ overcloud_floating_ips_yaml.stdout|from_yaml }}

        - name: Get floating ip detais
          shell: |
            source ~/overcloudrc
            openstack floating ip show '{{ item.ID }}' -f yaml
          register: overcloud_floating_ip_details_yaml
          with_items: >
            {{ overcloud_floating_ips }}
          changed_when: false

        - name: Parse floating ip detais
          set_fact:
            overcloud_floating_ip_details: >
              {{
                overcloud_floating_ip_details_yaml.results|
                map(attribute='stdout')|
                map('from_yaml')|
                list
              }}

        - name: Select management floating IP
          set_fact:
            management_floating_ip: >
              {{
                overcloud_floating_ip_details|
                selectattr('floating_network_id', 'equalto', management_network.ID)|
                first
              }}

        - debug:
            var: management_floating_ip
            verbosity: 2

        - name: Add management floating ip to test instance
          shell: |
            source ~/overcloudrc
            openstack server add floating ip \
                '{{ test_instance.ID }}' \
                '{{ management_floating_ip.floating_ip_address }}'

        - name: List overcloud instances
          shell: |
            source ~/overcloudrc
            openstack server list -f yaml
          register: overcloud_instances_yaml
          changed_when: false

        - name: Parse overcloud instances
          set_fact:
            overcloud_instances: >
              {{ overcloud_instances_yaml.stdout|from_yaml }}

        - name: Select overcloud test instance
          set_fact:
            test_instance: >
              {{
                overcloud_instances|
                selectattr('Name', 'equalto', 'overcloud-test')|
                first
              }}

        - debug:
            var: test_instance
            verbosity: 2

        - name: Parse test instance ip addresses
          set_fact:
            test_instance_ips: >
              {{
                test_instance.Networks|
                regex_findall('\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b')|
                list
              }}

        - debug:
            var: test_instance_ips
            verbosity: 2

    - name: Select test instance management IP
      set_fact:
        test_instance_management_ip: '{{ test_instance_ips|ipaddr(management_subnet.Subnet)|first }}'

    - debug:
        var: test_instance_management_ip
        verbosity: 2

    - name: Get overcloud projects
      shell: |
        source ~/overcloudrc
        openstack project list -f yaml
      register: overcloud_projects_yaml
      changed_when: false

    - name: Parse overcloud projects
      set_fact:
        overcloud_projects: >
          {{ overcloud_projects_yaml.stdout|from_yaml }}

    - name: Select admin project
      set_fact:
        admin_project: >
          {{
            overcloud_projects|
            selectattr('Name', 'equalto', 'admin')|
            first
          }}

    - debug:
        var: admin_project
        verbosity: 2

    - name: Get overcloud security groups
      shell: |
        source ~/overcloudrc
        openstack security group list -f yaml
      register: overcloud_security_groups_yaml
      changed_when: false

    - name: Parse overcloud projects
      set_fact:
        overcloud_security_groups: >
          {{ overcloud_security_groups_yaml.stdout|from_yaml }}

    - name: Select default security group
      set_fact:
        default_security_group: >
          {{
            overcloud_security_groups|
            selectattr('Name', 'equalto', 'default')|
            selectattr('Project', 'equalto', admin_project.ID)|
            first
          }}

    - debug:
        var: default_security_group
        verbosity: 2

    - name: Get overcloud security group rules
      shell: |
        source ~/overcloudrc
        openstack security group rule list -f yaml
      register: overcloud_security_group_rules_yaml
      changed_when: false

    - name: Parse overcloud security group rules
      set_fact:
        overcloud_security_group_rules: >
          {{ overcloud_security_group_rules_yaml.stdout|from_yaml }}

    - name: Select default security group rules
      set_fact:
        default_security_group_rules: >
          {{
            overcloud_security_group_rules|
            selectattr('Security Group', 'equalto', default_security_group.ID)|
            list
          }}

    - debug:
        var: default_security_group_rules
        verbosity: 2

    - name: Create default security group rules
      when: >
        (
          default_security_group_rules|
          selectattr('IP Range', 'equalto', '0.0.0.0/0')|
          selectattr('IP Protocol', 'equalto', item.protocol)|
          selectattr('Port Range', 'equalto', item.port_range)|
          list|
          length
        ) == 0
      shell: |
        source ~/overcloudrc
        openstack security group rule create \
          '{{ default_security_group.ID }}' \
          --proto '{{ item.protocol }}' \
          --dst-port '{{ item.dst_port }}' \
          --src-ip 0.0.0.0/0
      register: create_default_security_group_rules
      with_items: >
        {{ security_group_rules }}

    - when: create_default_security_group_rules|changed
      block:

        - name: Get overcloud security group rules
          shell: |
            source ~/overcloudrc
            openstack security group rule list -f yaml
          register: overcloud_security_group_rules_yaml
          changed_when: false

        - name: Parse overcloud security group rules
          set_fact:
            overcloud_security_group_rules: >
              {{ overcloud_security_group_rules_yaml.stdout|from_yaml }}

        - name: Select default security group rules
          set_fact:
            default_security_group_rules: >
              {{
                overcloud_security_group_rules|
                selectattr('Security Group', 'equalto', default_security_group.ID)|
                list
              }}

    - name: Select administration security group rules
      set_fact:
        admin_security_group_rules: >
          {{
            admin_security_group_rules|
            default([])|
            union(
              default_security_group_rules|
              selectattr('IP Range', 'equalto', '0.0.0.0/0')|
              selectattr('IP Protocol', 'equalto', item.protocol)|
              selectattr('Port Range', 'equalto', item.port_range)|
              list
            )
          }}
      with_items: >
        {{ security_group_rules }}

    - debug:
        var: admin_security_group_rules
        verbosity: 2

    - name: Ping test instance
      become_user: root
      command: >
        ping -c1 '{{ test_instance_management_ip }}'
      changed_when: false

    - name: Check SSH comnnection to test instance
      shell: |
        ssh \
          -i '{{ identity_file}}' \
          -o PasswordAuthentication=no \
          'cirros@{{ test_instance_management_ip }}' \
          echo SUCCESS
      changed_when: false
      register: test_ssh_connection
      failed_when: test_ssh_connection.stdout != 'SUCCESS'
      ignore_errors: true

    - when: test_ssh_connection|failed
      block:

        - name: Install SSH pass
          become_user: root
          yum:
            name: sshpass
            state: installed

        - name: Create SSH key to connect to test instance
          shell: |
            ssh-keygen -P '' -f '{{ identity_file}}'
          args:
            creates: '{{ identity_file}}'

        - name: Check SSH comnnection to test instance
          shell: |
            sshpass -p 'cubswin:)' \
              ssh-copy-id -i '{{ identity_file}}' \
              'cirros@{{ test_instance_management_ip }}'

        - name: Check SSH comnnection to test instance
          shell: |
            ssh \
              -i '{{ identity_file}}' \
              -o PasswordAuthentication=no \
              'cirros@{{ test_instance_management_ip }}' \
              echo SUCCESS
          changed_when: false
          register: test_ssh_connection
          failed_when: test_ssh_connection.stdout != 'SUCCESS'
