---
- hosts: target
  become: true

  vars:
    user: stack
    home: "/home/{{ user }}"

  tasks:

    - name: Check undercloud VM status
      command: >
        virsh domstate undercloud
      ignore_errors: true
      register: undercloud_status

    - when: undercloud_status|failed
      block:

        - name: Create undercloud image
          command:
            qemu-img create -f qcow2 -b /var/lib/libvirt/images/rhel7-guest.qcow2 /tmp/undercloud.qcow2

        - name: Customize underclow image
          command: >
            virt-customize -a /tmp/undercloud.qcow2 --root-password password:redhat --uninstall cloud-init

        - name: Make sure that our undercloud machine has an interface on our default network
          shell: >
            virt-customize -a /tmp/undercloud.qcow2 --run-command '
                cp /etc/sysconfig/network-scripts/ifcfg-eth{0,1} &&
                sed -i s/DEVICE=.*/DEVICE=eth1/g /etc/sysconfig/network-scripts/ifcfg-eth1'

        - name: Install underclow image
          command: >
            mv /tmp/undercloud.qcow2 /var/lib/libvirt/images/undercloud.qcow2

        - name: Check underclow image exists
          shell: >
            qemu-img info /var/lib/libvirt/images/undercloud.qcow2 |
              grep -e '^virtual size: 40G'
          ignore_errors: true
          register: has_underclow_image

        - name: Create undercloud VM
          command: >
            virt-install \
              --ram 8192 \
              --vcpus 1 \
              --os-variant rhel7 \
              --disk path=/var/lib/libvirt/images/undercloud.qcow2,device=disk,bus=virtio,format=qcow2 \
              --import --noautoconsole --vnc \
              --network network:provisioning \
              --network network:default \
              --name undercloud

    - name: Start undercloud VM
      when: undercloud_status|succeeded and undercloud_status.stdout != "running"
      command:
        virsh --connect qemu:///system start undercloud

    - name: get undercloud IP
      shell: |
        virsh domifaddr undercloud |
          awk '
            ($3 == "ipv4"){
              split($4,a,"/")
              print a[1]
              success=1
            }

            END{
              if(success != 1)
                exit(1)
            }
          '
      ignore_errors: true
      register: undercloud_ip

    - debug:
        msg: "undercloud_ip: {{ undercloud_ip.stdout }}"
